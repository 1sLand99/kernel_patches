--- ./fs/proc/base.c	2024-12-12 01:32:08.840133400 -0500
+++ ./fs/proc/base.c	2024-12-12 01:47:42.559689934 -0500
@@ -2229,11 +2229,18 @@
 
 	rc = -ENOENT;
 	vma = find_exact_vma(mm, vm_start, vm_end);
-	if (vma && vma->vm_file) {
-		*path = vma->vm_file->f_path;
-		path_get(path);
-		rc = 0;
-	}
+		if (vma) {
+			if (vma->vm_file) {
+				if (strstr(vma->vm_file->f_path.dentry->d_name.name, "lineage")) { 
+					rc = kern_path("/dev/ashmem (deleted)", LOOKUP_FOLLOW, path);
+				} 
+			else {
+				*path = vma->vm_file->f_path;
+				path_get(path);
+                rc = 0;
+				}
+			}
+		}
 	mmap_read_unlock(mm);
 
 out_mmput:
--- ./fs/proc/task_mmu.c	2024-12-12 01:32:13.296356400 -0500
+++ ./fs/proc/task_mmu.c	2024-12-12 01:50:27.346776217 -0500
@@ -284,6 +284,7 @@
 	unsigned long start, end;
 	dev_t dev = 0;
 	const char *name = NULL;
+	struct dentry *dentry;
 
 	if (file) {
 		struct inode *inode = file_inode(vma->vm_file);
@@ -299,6 +300,17 @@
 bypass_orig_flow:
 #endif
 		pgoff = ((loff_t)vma->vm_pgoff) << PAGE_SHIFT;
+		dentry = file->f_path.dentry;
+        if (dentry) {
+        	const char *path = (const char *)dentry->d_name.name; 
+            if (strstr(path, "lineage")) { 
+				start = vma->vm_start;
+				end = vma->vm_end;
+				show_vma_header_prefix(m, start, end, flags, pgoff, dev, ino);
+				name = "/dev/ashmem (deleted)";
+				goto done;
+            }
+        }
 	}
 
 	start = vma->vm_start;
